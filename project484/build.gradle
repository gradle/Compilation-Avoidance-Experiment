plugins {
    id 'java'
id 'eclipse'
id 'idea'
}

group = "org.gradle.test.performance"
version = "2.0"

repositories {

            maven {
                name 'MAVEN_CENTRAL_MIRROR'
                url 'https://repo.maven.apache.org/maven2/'
            }

}


    dependencies {

            implementation libs.commonsLang
    implementation libs.commonsHttpClient
    implementation libs.commonsCodec
    implementation libs.jclOverSlf4j
            implementation libs.reflectasm
            testImplementation libs.junit

            implementation project(":project403")
    implementation project(":project443")
    implementation project(":project483")

    }


dependencies{

}



String compilerMemory = getProperty('compilerMemory')
String testRunnerMemory = getProperty('testRunnerMemory')
int testForkEvery = getProperty('testForkEvery') as Integer
List<String> javaCompileJvmArgs = findProperty('javaCompileJvmArgs')?.tokenize(';') ?: []

tasks.withType(AbstractCompile).configureEach {
    options.fork = true
    options.incremental = true
    options.forkOptions.memoryInitialSize = compilerMemory
    options.forkOptions.memoryMaximumSize = compilerMemory
    options.forkOptions.jvmArgs.addAll(javaCompileJvmArgs)
}

tasks.withType(GroovyCompile).configureEach {
    groovyOptions.fork = true
    groovyOptions.forkOptions.memoryInitialSize = compilerMemory
    groovyOptions.forkOptions.memoryMaximumSize = compilerMemory
    groovyOptions.forkOptions.jvmArgs.addAll(javaCompileJvmArgs)
}

tasks.withType(Test).configureEach {

    minHeapSize = testRunnerMemory
    maxHeapSize = testRunnerMemory
    maxParallelForks = 1
    forkEvery = testForkEvery
    jvmArgs '-XX:+HeapDumpOnOutOfMemoryError'
}

task dependencyReport(type: DependencyReportTask) {
    outputs.upToDateWhen { false }
    outputFile = new File(buildDir, "dependencies.txt")
}